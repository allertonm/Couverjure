package org.cocoaclojure.jna;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class objc_protocol_list extends com.ochafik.lang.jnaerator.runtime.Structure<objc_protocol_list, objc_protocol_list.ByValue, objc_protocol_list.ByReference> {
	public org.cocoaclojure.jna.objc_protocol_list.ByReference next;
	public com.sun.jna.NativeLong count;
	public org.cocoaclojure.jna.RuntimeLibrary.objc_object[] list = new org.cocoaclojure.jna.RuntimeLibrary.objc_object[(1)];
	public objc_protocol_list() {
		super();
	}
	public objc_protocol_list(org.cocoaclojure.jna.objc_protocol_list.ByReference next, com.sun.jna.NativeLong count, org.cocoaclojure.jna.RuntimeLibrary.objc_object list[]) {
		super();
		this.next = next;
		this.count = count;
		if (list.length != this.list.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.list = list;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected objc_protocol_list newInstance() { return new objc_protocol_list(); }
	public static objc_protocol_list[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(objc_protocol_list.class, arrayLength);
	}
	public static class ByReference extends objc_protocol_list implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends objc_protocol_list implements com.sun.jna.Structure.ByValue {}
}
