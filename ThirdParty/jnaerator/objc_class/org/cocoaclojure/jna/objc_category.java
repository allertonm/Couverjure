package org.cocoaclojure.jna;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class objc_category extends com.ochafik.lang.jnaerator.runtime.Structure<objc_category, objc_category.ByValue, objc_category.ByReference> {
	public com.sun.jna.Pointer category_name;
	public com.sun.jna.Pointer class_name;
	public org.cocoaclojure.jna.objc_method_list.ByReference instance_methods;
	public org.cocoaclojure.jna.objc_method_list.ByReference class_methods;
	public org.cocoaclojure.jna.objc_protocol_list.ByReference protocols;
	public objc_category() {
		super();
	}
	public objc_category(com.sun.jna.Pointer category_name, com.sun.jna.Pointer class_name, org.cocoaclojure.jna.objc_method_list.ByReference instance_methods, org.cocoaclojure.jna.objc_method_list.ByReference class_methods, org.cocoaclojure.jna.objc_protocol_list.ByReference protocols) {
		super();
		this.category_name = category_name;
		this.class_name = class_name;
		this.instance_methods = instance_methods;
		this.class_methods = class_methods;
		this.protocols = protocols;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected objc_category newInstance() { return new objc_category(); }
	public static objc_category[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Structure.newArray(objc_category.class, arrayLength);
	}
	public static class ByReference extends objc_category implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends objc_category implements com.sun.jna.Structure.ByValue {}
}
