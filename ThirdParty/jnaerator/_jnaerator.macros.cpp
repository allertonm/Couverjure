__LINE__=__LINE__
__FILE__=__FILE__
__COUNTER__=__COUNTER__
__cplusplus=__cplusplus => 1
__LITTLE_ENDIAN__=__LITTLE_ENDIAN__ => 1
G_BYTE_ORDER=G_BYTE_ORDER => 1234
NDEBUG=NDEBUG => 1
__STDC__=__STDC__ => 1
__GNUC__=__GNUC__ => 1
TARGET_API_MAC_OSX=TARGET_API_MAC_OSX => 1
__APPLE_CPP__=__APPLE_CPP__ => 1
__APPLE_CC__=__APPLE_CC__ => 1
TARGET_CPU_X86_64=TARGET_CPU_X86_64 => 1
__i386__=__i386__ => 1
__x86_64__=__x86_64__ => 1
__amd64__=__amd64__ => 1
M_I86=M_I86 => 1
_M_I86=_M_I86 => 1
_WIN32=_WIN32 => 1
_OBJC_RUNTIME_H=_OBJC_RUNTIME_H
_OBJC_OBJC_H_=_OBJC_OBJC_H_
_OBJC_OBJC_API_H_=_OBJC_OBJC_API_H_
__AVAILABILITYMACROS__=__AVAILABILITYMACROS__
MAC_OS_X_VERSION_10_0=MAC_OS_X_VERSION_10_0 => 1000
MAC_OS_X_VERSION_10_1=MAC_OS_X_VERSION_10_1 => 1010
MAC_OS_X_VERSION_10_2=MAC_OS_X_VERSION_10_2 => 1020
MAC_OS_X_VERSION_10_3=MAC_OS_X_VERSION_10_3 => 1030
MAC_OS_X_VERSION_10_4=MAC_OS_X_VERSION_10_4 => 1040
MAC_OS_X_VERSION_10_5=MAC_OS_X_VERSION_10_5 => 1050
MAC_OS_X_VERSION_MIN_REQUIRED=MAC_OS_X_VERSION_MIN_REQUIRED => MAC_OS_X_VERSION_10_4
MAC_OS_X_VERSION_MAX_ALLOWED=MAC_OS_X_VERSION_MAX_ALLOWED => MAC_OS_X_VERSION_10_5
WEAK_IMPORT_ATTRIBUTE=WEAK_IMPORT_ATTRIBUTE
DEPRECATED_ATTRIBUTE=DEPRECATED_ATTRIBUTE
UNAVAILABLE_ATTRIBUTE=UNAVAILABLE_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER=AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED=AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED => DEPRECATED_ATTRIBUTE
DEPRECATED_IN_MAC_OS_X_VERSION_10_0_AND_LATER=DEPRECATED_IN_MAC_OS_X_VERSION_10_0_AND_LATER => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER=AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED=AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1=AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_1 => DEPRECATED_ATTRIBUTE
DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER=DEPRECATED_IN_MAC_OS_X_VERSION_10_1_AND_LATER => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER=AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED=AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2=AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2 => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2=AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_2 => DEPRECATED_ATTRIBUTE
DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER=DEPRECATED_IN_MAC_OS_X_VERSION_10_2_AND_LATER => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER=AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED=AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3=AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3=AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3=AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3 => DEPRECATED_ATTRIBUTE
DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER=DEPRECATED_IN_MAC_OS_X_VERSION_10_3_AND_LATER => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER=AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED=AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4=AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4=AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4=AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4=AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_4 => DEPRECATED_ATTRIBUTE
DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER=DEPRECATED_IN_MAC_OS_X_VERSION_10_4_AND_LATER => DEPRECATED_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER=AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER => WEAK_IMPORT_ATTRIBUTE
AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED=AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER_BUT_DEPRECATED => AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5=AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 => AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5=AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 => AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5=AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 => AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5=AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 => AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER
AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5=AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5 => AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER
DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER=DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER
OBJC_API_VERSION=OBJC_API_VERSION => 0
OBJC2_UNAVAILABLE=OBJC2_UNAVAILABLE => DEPRECATED_IN_MAC_OS_X_VERSION_10_5_AND_LATER
OBJC_EXPORT=OBJC_EXPORT => extern "C"
OBJC_IMPORT=OBJC_IMPORT => extern
_SYS_TYPES_H_=_SYS_TYPES_H_
__SYS_APPLEAPIOPTS_H__=__SYS_APPLEAPIOPTS_H__
__APPLE_API_STANDARD=__APPLE_API_STANDARD
__APPLE_API_STABLE=__APPLE_API_STABLE
__APPLE_API_EVOLVING=__APPLE_API_EVOLVING
__APPLE_API_UNSTABLE=__APPLE_API_UNSTABLE
__APPLE_API_PRIVATE=__APPLE_API_PRIVATE
__APPLE_API_OBSOLETE=__APPLE_API_OBSOLETE
_CDEFS_H_=_CDEFS_H_
__BEGIN_DECLS=__BEGIN_DECLS => extern "C" {
__END_DECLS=__END_DECLS => }
__P=__P(protos) => protos
__CONCAT=__CONCAT(x, y) => x ## y
__STRING=__STRING(x) => #x
__const=__const => const
__signed=__signed => signed
__volatile=__volatile => volatile
__inline=__inline => inline
__attribute__=__attribute__(x)
__dead=__dead => __volatile
__pure=__pure => __const
__dead2=__dead2
__pure2=__pure2
__unused=__unused
__restrict=__restrict
__printflike=__printflike(fmtarg, firstvararg)
__scanflike=__scanflike(fmtarg, firstvararg)
__IDSTRING=__IDSTRING(name, string) => static const char name[] __unused = string
__COPYRIGHT=__COPYRIGHT(s) => __IDSTRING(copyright,s)
__RCSID=__RCSID(s) => __IDSTRING(rcsid,s)
__SCCSID=__SCCSID(s) => __IDSTRING(sccsid,s)
__PROJECT_VERSION=__PROJECT_VERSION(s) => __IDSTRING(project_version,s)
__DARWIN_UNIX03=__DARWIN_UNIX03 => 1
__DARWIN_64_BIT_INO_T=__DARWIN_64_BIT_INO_T => 0
__DARWIN_NON_CANCELABLE=__DARWIN_NON_CANCELABLE => 0
__DARWIN_VERS_1050=__DARWIN_VERS_1050 => 0
__DARWIN_SUF_UNIX03=__DARWIN_SUF_UNIX03 => "$UNIX2003"
__DARWIN_SUF_UNIX03_SET=__DARWIN_SUF_UNIX03_SET => 1
__DARWIN_SUF_64_BIT_INO_T=__DARWIN_SUF_64_BIT_INO_T
__DARWIN_SUF_NON_CANCELABLE=__DARWIN_SUF_NON_CANCELABLE
__DARWIN_SUF_1050=__DARWIN_SUF_1050
__DARWIN_SUF_EXTSN=__DARWIN_SUF_EXTSN => "$DARWIN_EXTSN"
__DARWIN_ALIAS=__DARWIN_ALIAS(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_UNIX03)
__DARWIN_ALIAS_C=__DARWIN_ALIAS_C(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_NON_CANCELABLE __DARWIN_SUF_UNIX03)
__DARWIN_ALIAS_I=__DARWIN_ALIAS_I(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_64_BIT_INO_T __DARWIN_SUF_UNIX03)
__DARWIN_INODE64=__DARWIN_INODE64(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_64_BIT_INO_T)
__DARWIN_1050=__DARWIN_1050(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_1050)
__DARWIN_1050ALIAS=__DARWIN_1050ALIAS(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_UNIX03)
__DARWIN_1050ALIAS_C=__DARWIN_1050ALIAS_C(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_NON_CANCELABLE __DARWIN_SUF_UNIX03)
__DARWIN_1050ALIAS_I=__DARWIN_1050ALIAS_I(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_64_BIT_INO_T __DARWIN_SUF_UNIX03)
__DARWIN_1050INODE64=__DARWIN_1050INODE64(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_1050 __DARWIN_SUF_64_BIT_INO_T)
__DARWIN_EXTSN=__DARWIN_EXTSN(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_EXTSN)
__DARWIN_EXTSN_C=__DARWIN_EXTSN_C(sym) => __asm("_" __STRING(sym) __DARWIN_SUF_EXTSN __DARWIN_SUF_NON_CANCELABLE)
__DARWIN_NO_LONG_LONG=__DARWIN_NO_LONG_LONG => (defined(__STRICT_ANSI__) && (__STDC_VERSION__-0 < 199901L) && !defined(__GNUG__))
__DARWIN_LDBL_COMPAT=__DARWIN_LDBL_COMPAT(x)
__DARWIN_LDBL_COMPAT2=__DARWIN_LDBL_COMPAT2(x)
__DARWIN_LONG_DOUBLE_IS_DOUBLE=__DARWIN_LONG_DOUBLE_IS_DOUBLE => 0
__deprecated=__deprecated
_DARWIN_FEATURE_UNIX_CONFORMANCE=_DARWIN_FEATURE_UNIX_CONFORMANCE => 3
_BSD_MACHINE_TYPES_H_=_BSD_MACHINE_TYPES_H_
_MACHTYPES_H_=_MACHTYPES_H_
_BSD_I386__TYPES_H_=_BSD_I386__TYPES_H_
_INT8_T=_INT8_T
_INT16_T=_INT16_T
_INT32_T=_INT32_T
_INT64_T=_INT64_T
_INTPTR_T=_INTPTR_T
_UINTPTR_T=_UINTPTR_T
USER_ADDR_NULL=USER_ADDR_NULL => ((user_addr_t) 0)
CAST_USER_ADDR_T=CAST_USER_ADDR_T(a_ptr) => ((user_addr_t)((uintptr_t)(a_ptr)))
__offsetof=__offsetof(type, field) => ((size_t)(&((type *)0)->field))
_SYS__TYPES_H_=_SYS__TYPES_H_
_BSD_MACHINE__TYPES_H_=_BSD_MACHINE__TYPES_H_
__PTHREAD_SIZE__=__PTHREAD_SIZE__ => 596
__PTHREAD_ATTR_SIZE__=__PTHREAD_ATTR_SIZE__ => 36
__PTHREAD_MUTEXATTR_SIZE__=__PTHREAD_MUTEXATTR_SIZE__ => 8
__PTHREAD_MUTEX_SIZE__=__PTHREAD_MUTEX_SIZE__ => 40
__PTHREAD_CONDATTR_SIZE__=__PTHREAD_CONDATTR_SIZE__ => 4
__PTHREAD_COND_SIZE__=__PTHREAD_COND_SIZE__ => 24
__PTHREAD_ONCE_SIZE__=__PTHREAD_ONCE_SIZE__ => 4
__PTHREAD_RWLOCK_SIZE__=__PTHREAD_RWLOCK_SIZE__ => 124
__PTHREAD_RWLOCKATTR_SIZE__=__PTHREAD_RWLOCKATTR_SIZE__ => 12
__DARWIN_NULL=__DARWIN_NULL => 0
_BSD_MACHINE_ENDIAN_H_=_BSD_MACHINE_ENDIAN_H_
_I386__ENDIAN_H_=_I386__ENDIAN_H_
_QUAD_HIGHWORD=_QUAD_HIGHWORD => 1
_QUAD_LOWWORD=_QUAD_LOWWORD => 0
__DARWIN_LITTLE_ENDIAN=__DARWIN_LITTLE_ENDIAN => 1234
__DARWIN_BIG_ENDIAN=__DARWIN_BIG_ENDIAN => 4321
__DARWIN_PDP_ENDIAN=__DARWIN_PDP_ENDIAN => 3412
__DARWIN_BYTE_ORDER=__DARWIN_BYTE_ORDER => __DARWIN_LITTLE_ENDIAN
LITTLE_ENDIAN=LITTLE_ENDIAN => __DARWIN_LITTLE_ENDIAN
BIG_ENDIAN=BIG_ENDIAN => __DARWIN_BIG_ENDIAN
PDP_ENDIAN=PDP_ENDIAN => __DARWIN_PDP_ENDIAN
BYTE_ORDER=BYTE_ORDER => __DARWIN_BYTE_ORDER
_SYS__ENDIAN_H_=_SYS__ENDIAN_H_
_OS__OSBYTEORDER_H=_OS__OSBYTEORDER_H
__DARWIN_OSSwapConstInt16=__DARWIN_OSSwapConstInt16(x) => ((__uint16_t)((((__uint16_t)(x) & 0xff00) >> 8) | (((__uint16_t)(x) & 0x00ff) << 8)))
__DARWIN_OSSwapConstInt32=__DARWIN_OSSwapConstInt32(x) => ((__uint32_t)((((__uint32_t)(x) & 0xff000000) >> 24) | (((__uint32_t)(x) & 0x00ff0000) >> 8) | (((__uint32_t)(x) & 0x0000ff00) << 8) | (((__uint32_t)(x) & 0x000000ff) << 24)))
__DARWIN_OSSwapConstInt64=__DARWIN_OSSwapConstInt64(x) => ((__uint64_t)((((__uint64_t)(x) & 0xff00000000000000ULL) >> 56) | (((__uint64_t)(x) & 0x00ff000000000000ULL) >> 40) | (((__uint64_t)(x) & 0x0000ff0000000000ULL) >> 24) | (((__uint64_t)(x) & 0x000000ff00000000ULL) >> 8) | (((__uint64_t)(x) & 0x00000000ff000000ULL) << 8) | (((__uint64_t)(x) & 0x0000000000ff0000ULL) << 24) | (((__uint64_t)(x) & 0x000000000000ff00ULL) << 40) | (((__uint64_t)(x) & 0x00000000000000ffULL) << 56)))
_OS__OSBYTEORDERI386_H=_OS__OSBYTEORDERI386_H
__DARWIN_OS_INLINE=__DARWIN_OS_INLINE => static inline
__DARWIN_OSSwapInt16=__DARWIN_OSSwapInt16(x) => (__builtin_constant_p(x) ? __DARWIN_OSSwapConstInt16(x) : _OSSwapInt16(x))
__DARWIN_OSSwapInt32=__DARWIN_OSSwapInt32(x) => (__builtin_constant_p(x) ? __DARWIN_OSSwapConstInt32(x) : _OSSwapInt32(x))
__DARWIN_OSSwapInt64=__DARWIN_OSSwapInt64(x) => (__builtin_constant_p(x) ? __DARWIN_OSSwapConstInt64(x) : _OSSwapInt64(x))
ntohs=ntohs(x) => __DARWIN_OSSwapInt16(x)
htons=htons(x) => __DARWIN_OSSwapInt16(x)
ntohl=ntohl(x) => __DARWIN_OSSwapInt32(x)
htonl=htonl(x) => __DARWIN_OSSwapInt32(x)
NTOHL=NTOHL(x) => (x) = ntohl((__uint32_t)x)
NTOHS=NTOHS(x) => (x) = ntohs((__uint16_t)x)
HTONL=HTONL(x) => (x) = htonl((__uint32_t)x)
HTONS=HTONS(x) => (x) = htons((__uint16_t)x)
_U_LONG=_U_LONG
_DEV_T=_DEV_T
_BLKCNT_T=_BLKCNT_T
_BLKSIZE_T=_BLKSIZE_T
_GID_T=_GID_T
_IN_ADDR_T=_IN_ADDR_T
_IN_PORT_T=_IN_PORT_T
_INO_T=_INO_T
_INO64_T=_INO64_T
_KEY_T=_KEY_T
_MODE_T=_MODE_T
_NLINK_T=_NLINK_T
_ID_T=_ID_T
_PID_T=_PID_T
_OFF_T=_OFF_T
_UID_T=_UID_T
_CLOCK_T=_CLOCK_T
_SIZE_T=_SIZE_T
_SSIZE_T=_SSIZE_T
_TIME_T=_TIME_T
_USECONDS_T=_USECONDS_T
_SUSECONDS_T=_SUSECONDS_T
_FD_SET=_FD_SET
__DARWIN_FD_SETSIZE=__DARWIN_FD_SETSIZE => 1024
__DARWIN_NBBY=__DARWIN_NBBY => 8
__DARWIN_NFDBITS=__DARWIN_NFDBITS => (sizeof(__int32_t) * __DARWIN_NBBY)
__DARWIN_howmany=__DARWIN_howmany(x, y) => (((x) + ((y) - 1)) / (y))
__DARWIN_FD_SET=__DARWIN_FD_SET(n, p) => do { int __fd = (n); ((p)->fds_bits[__fd/__DARWIN_NFDBITS] |= (1<<(__fd % __DARWIN_NFDBITS))); } while(0)
__DARWIN_FD_CLR=__DARWIN_FD_CLR(n, p) => do { int __fd = (n); ((p)->fds_bits[__fd/__DARWIN_NFDBITS] &= ~(1<<(__fd % __DARWIN_NFDBITS))); } while(0)
__DARWIN_FD_ISSET=__DARWIN_FD_ISSET(n, p) => __darwin_fd_isset((n), (p))
__DARWIN_FD_ZERO=__DARWIN_FD_ZERO(p) => bzero(p, sizeof(*(p)))
__DARWIN_FD_COPY=__DARWIN_FD_COPY(f, t) => bcopy(f, t, sizeof(*(f)))
NBBY=NBBY => __DARWIN_NBBY
NFDBITS=NFDBITS => __DARWIN_NFDBITS
howmany=howmany(x, y) => __DARWIN_howmany(x, y)
FD_SETSIZE=FD_SETSIZE => __DARWIN_FD_SETSIZE
FD_SET=FD_SET(n, p) => __DARWIN_FD_SET(n, p)
FD_CLR=FD_CLR(n, p) => __DARWIN_FD_CLR(n, p)
FD_ISSET=FD_ISSET(n, p) => __DARWIN_FD_ISSET(n, p)
FD_ZERO=FD_ZERO(p) => __DARWIN_FD_ZERO(p)
FD_COPY=FD_COPY(f, t) => __DARWIN_FD_COPY(f, t)
_PTHREAD_ATTR_T=_PTHREAD_ATTR_T
_PTHREAD_COND_T=_PTHREAD_COND_T
_PTHREAD_CONDATTR_T=_PTHREAD_CONDATTR_T
_PTHREAD_MUTEX_T=_PTHREAD_MUTEX_T
_PTHREAD_MUTEXATTR_T=_PTHREAD_MUTEXATTR_T
_PTHREAD_ONCE_T=_PTHREAD_ONCE_T
_PTHREAD_RWLOCK_T=_PTHREAD_RWLOCK_T
_PTHREAD_RWLOCKATTR_T=_PTHREAD_RWLOCKATTR_T
_PTHREAD_T=_PTHREAD_T
_PTHREAD_KEY_T=_PTHREAD_KEY_T
_FSBLKCNT_T=_FSBLKCNT_T
_FSFILCNT_T=_FSFILCNT_T
OBJC_BOOL_DEFINED=OBJC_BOOL_DEFINED
YES=YES => (BOOL)1
NO=NO => (BOOL)0
Nil=Nil => __DARWIN_NULL
nil=nil => __DARWIN_NULL
__strong=__strong
ARITH_SHIFT=ARITH_SHIFT => 16
ISSELECTOR=ISSELECTOR(sel) => sel_isMapped(sel)
SELNAME=SELNAME(sel) => sel_getName(sel)
SELUID=SELUID(str) => sel_getUid(str)
NAMEOF=NAMEOF(obj) => object_getClassName(obj)
IV=IV(obj) => object_getIndexedIvars(obj)
_STDINT_H_=_STDINT_H_
__WORDSIZE=__WORDSIZE => 32
_UINT8_T=_UINT8_T
_UINT16_T=_UINT16_T
_UINT32_T=_UINT32_T
_UINT64_T=_UINT64_T
_INTMAX_T=_INTMAX_T
_UINTMAX_T=_UINTMAX_T
INT8_MAX=INT8_MAX => 127
INT16_MAX=INT16_MAX => 32767
INT32_MAX=INT32_MAX => 2147483647
INT64_MAX=INT64_MAX => 9223372036854775807LL
INT8_MIN=INT8_MIN => -128
INT16_MIN=INT16_MIN => -32768
INT32_MIN=INT32_MIN => (-INT32_MAX-1)
INT64_MIN=INT64_MIN => (-INT64_MAX-1)
UINT8_MAX=UINT8_MAX => 255
UINT16_MAX=UINT16_MAX => 65535
UINT32_MAX=UINT32_MAX => 4294967295U
UINT64_MAX=UINT64_MAX => 18446744073709551615ULL
INT_LEAST8_MIN=INT_LEAST8_MIN => INT8_MIN
INT_LEAST16_MIN=INT_LEAST16_MIN => INT16_MIN
INT_LEAST32_MIN=INT_LEAST32_MIN => INT32_MIN
INT_LEAST64_MIN=INT_LEAST64_MIN => INT64_MIN
INT_LEAST8_MAX=INT_LEAST8_MAX => INT8_MAX
INT_LEAST16_MAX=INT_LEAST16_MAX => INT16_MAX
INT_LEAST32_MAX=INT_LEAST32_MAX => INT32_MAX
INT_LEAST64_MAX=INT_LEAST64_MAX => INT64_MAX
UINT_LEAST8_MAX=UINT_LEAST8_MAX => UINT8_MAX
UINT_LEAST16_MAX=UINT_LEAST16_MAX => UINT16_MAX
UINT_LEAST32_MAX=UINT_LEAST32_MAX => UINT32_MAX
UINT_LEAST64_MAX=UINT_LEAST64_MAX => UINT64_MAX
INT_FAST8_MIN=INT_FAST8_MIN => INT8_MIN
INT_FAST16_MIN=INT_FAST16_MIN => INT16_MIN
INT_FAST32_MIN=INT_FAST32_MIN => INT32_MIN
INT_FAST64_MIN=INT_FAST64_MIN => INT64_MIN
INT_FAST8_MAX=INT_FAST8_MAX => INT8_MAX
INT_FAST16_MAX=INT_FAST16_MAX => INT16_MAX
INT_FAST32_MAX=INT_FAST32_MAX => INT32_MAX
INT_FAST64_MAX=INT_FAST64_MAX => INT64_MAX
UINT_FAST8_MAX=UINT_FAST8_MAX => UINT8_MAX
UINT_FAST16_MAX=UINT_FAST16_MAX => UINT16_MAX
UINT_FAST32_MAX=UINT_FAST32_MAX => UINT32_MAX
UINT_FAST64_MAX=UINT_FAST64_MAX => UINT64_MAX
INTPTR_MIN=INTPTR_MIN => INT32_MIN
INTPTR_MAX=INTPTR_MAX => INT32_MAX
UINTPTR_MAX=UINTPTR_MAX => UINT32_MAX
INTMAX_MIN=INTMAX_MIN => INT64_MIN
INTMAX_MAX=INTMAX_MAX => INT64_MAX
UINTMAX_MAX=UINTMAX_MAX => UINT64_MAX
PTRDIFF_MIN=PTRDIFF_MIN => INT32_MIN
PTRDIFF_MAX=PTRDIFF_MAX => INT32_MAX
SIZE_MAX=SIZE_MAX => UINT32_MAX
WCHAR_MAX=WCHAR_MAX => 0x7fffffff
WCHAR_MIN=WCHAR_MIN => (-WCHAR_MAX-1)
WINT_MIN=WINT_MIN => INT32_MIN
WINT_MAX=WINT_MAX => INT32_MAX
SIG_ATOMIC_MIN=SIG_ATOMIC_MIN => INT32_MIN
SIG_ATOMIC_MAX=SIG_ATOMIC_MAX => INT32_MAX
INT8_C=INT8_C(v) => (v)
INT16_C=INT16_C(v) => (v)
INT32_C=INT32_C(v) => (v)
INT64_C=INT64_C(v) => (v ## LL)
UINT8_C=UINT8_C(v) => (v ## U)
UINT16_C=UINT16_C(v) => (v ## U)
UINT32_C=UINT32_C(v) => (v ## U)
UINT64_C=UINT64_C(v) => (v ## ULL)
INTMAX_C=INTMAX_C(v) => (v ## LL)
UINTMAX_C=UINTMAX_C(v) => (v ## ULL)
__STDDEF_H__=__STDDEF_H__
__TYPES_H_=__TYPES_H_
__DARWIN_WCHAR_MAX=__DARWIN_WCHAR_MAX => 0x7fffffff
__DARWIN_WCHAR_MIN=__DARWIN_WCHAR_MIN => (-0x7fffffff - 1)
__DARWIN_WEOF=__DARWIN_WEOF => ((__darwin_wint_t)-1)
_PTRDIFF_T=_PTRDIFF_T
_WINT_T=_WINT_T
NULL=NULL => __DARWIN_NULL
offsetof=offsetof(type, field) => ((size_t)(&((type *)0)->field))
_C_ID=_C_ID => '@'
_C_CLASS=_C_CLASS => '#'
_C_SEL=_C_SEL => ':'
_C_CHR=_C_CHR => 'c'
_C_UCHR=_C_UCHR => 'C'
_C_SHT=_C_SHT => 's'
_C_USHT=_C_USHT => 'S'
_C_INT=_C_INT => 'i'
_C_UINT=_C_UINT => 'I'
_C_LNG=_C_LNG => 'l'
_C_ULNG=_C_ULNG => 'L'
_C_LNG_LNG=_C_LNG_LNG => 'q'
_C_ULNG_LNG=_C_ULNG_LNG => 'Q'
_C_FLT=_C_FLT => 'f'
_C_DBL=_C_DBL => 'd'
_C_BFLD=_C_BFLD => 'b'
_C_BOOL=_C_BOOL => 'B'
_C_VOID=_C_VOID => 'v'
_C_UNDEF=_C_UNDEF => '?'
_C_PTR=_C_PTR => '^'
_C_CHARPTR=_C_CHARPTR => '*'
_C_ATOM=_C_ATOM => '%'
_C_ARY_B=_C_ARY_B => '['
_C_ARY_E=_C_ARY_E => ']'
_C_UNION_B=_C_UNION_B => '('
_C_UNION_E=_C_UNION_E => ')'
_C_STRUCT_B=_C_STRUCT_B => '{'
_C_STRUCT_E=_C_STRUCT_E => '}'
_C_VECTOR=_C_VECTOR => '!'
_C_CONST=_C_CONST => 'r'
CLS_GETINFO=CLS_GETINFO(cls, infomask) => ((cls)->info & (infomask))
CLS_SETINFO=CLS_SETINFO(cls, infomask) => ((cls)->info |= (infomask))
CLS_CLASS=CLS_CLASS => 0x1
CLS_META=CLS_META => 0x2
CLS_INITIALIZED=CLS_INITIALIZED => 0x4
CLS_POSING=CLS_POSING => 0x8
CLS_MAPPED=CLS_MAPPED => 0x10
CLS_FLUSH_CACHE=CLS_FLUSH_CACHE => 0x20
CLS_GROW_CACHE=CLS_GROW_CACHE => 0x40
CLS_NEED_BIND=CLS_NEED_BIND => 0x80
CLS_METHOD_ARRAY=CLS_METHOD_ARRAY => 0x100
CLS_JAVA_HYBRID=CLS_JAVA_HYBRID => 0x200
CLS_JAVA_CLASS=CLS_JAVA_CLASS => 0x400
CLS_INITIALIZING=CLS_INITIALIZING => 0x800
CLS_FROM_BUNDLE=CLS_FROM_BUNDLE => 0x1000
CLS_HAS_CXX_STRUCTORS=CLS_HAS_CXX_STRUCTORS => 0x2000
CLS_NO_METHOD_ARRAY=CLS_NO_METHOD_ARRAY => 0x4000
CLS_HAS_LOAD_METHOD=CLS_HAS_LOAD_METHOD => 0x8000
CLS_CONSTRUCTING=CLS_CONSTRUCTING => 0x10000
CLS_EXT=CLS_EXT => 0x20000
CACHE_BUCKET_NAME=CACHE_BUCKET_NAME(B) => ((B)->method_name)
CACHE_BUCKET_IMP=CACHE_BUCKET_IMP(B) => ((B)->method_imp)
CACHE_BUCKET_VALID=CACHE_BUCKET_VALID(B) => (B)
CACHE_HASH=CACHE_HASH(sel, mask) => (((uintptr_t)(sel)>>2) & (mask))
OBSOLETE_OBJC_GETCLASSES=OBSOLETE_OBJC_GETCLASSES => 1
OBJC_NEXT_METHOD_LIST=OBJC_NEXT_METHOD_LIST => 1
marg_prearg_size=marg_prearg_size => 0
marg_malloc=marg_malloc(margs, method) => do { margs = (marg_list *)malloc (marg_prearg_size + ((7 + method_getSizeOfArguments(method)) & ~7)); } while (0)
marg_free=marg_free(margs) => do { free(margs); } while (0)
marg_adjustedOffset=marg_adjustedOffset(method, offset) => (marg_prearg_size + offset)
marg_getRef=marg_getRef(margs, offset, type) => ( (type *)((char *)margs + marg_adjustedOffset(method,offset) ) )
marg_getValue=marg_getValue(margs, offset, type) => ( *marg_getRef(margs, offset, type) )
marg_setValue=marg_setValue(margs, offset, type, value) => ( marg_getValue(margs, offset, type) = (value) )
