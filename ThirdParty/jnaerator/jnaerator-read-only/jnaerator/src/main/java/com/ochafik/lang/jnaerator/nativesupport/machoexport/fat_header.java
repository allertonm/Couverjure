package com.ochafik.lang.jnaerator.nativesupport.machoexport;
/**
 * <i>native declaration : sources/com/ochafik/lang/jnaerator/nativesupport/machoexport.h:14</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class fat_header extends com.ochafik.lang.jnaerator.runtime.Structure<fat_header, fat_header.ByValue, fat_header.ByReference> {
	public int magic;
	public int nfat_arch;
	public fat_header() {
		super();
	}
	public fat_header(int magic, int nfat_arch) {
		super();
		this.magic = magic;
		this.nfat_arch = nfat_arch;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected fat_header newInstance() { return new fat_header(); }
	public static class ByReference extends fat_header implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends fat_header implements com.sun.jna.Structure.ByValue {}
}
