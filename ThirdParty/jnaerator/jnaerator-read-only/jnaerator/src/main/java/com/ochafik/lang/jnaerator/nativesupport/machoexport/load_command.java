package com.ochafik.lang.jnaerator.nativesupport.machoexport;
/**
 * <i>native declaration : sources/com/ochafik/lang/jnaerator/nativesupport/machoexport.h:64</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class load_command extends com.ochafik.lang.jnaerator.runtime.Structure<load_command, load_command.ByValue, load_command.ByReference> {
	/// type of load command
	public int cmd;
	/// total size of command in bytes
	public int cmdsize;
	public load_command() {
		super();
	}
	/**
	 * @param cmd type of load command<br>
	 * @param cmdsize total size of command in bytes
	 */
	public load_command(int cmd, int cmdsize) {
		super();
		this.cmd = cmd;
		this.cmdsize = cmdsize;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected load_command newInstance() { return new load_command(); }
	public static class ByReference extends load_command implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends load_command implements com.sun.jna.Structure.ByValue {}
}
