package com.ochafik.lang.jnaerator.nativesupport.dllexport;
/**
 * <i>native declaration : C:\Prog\jnaerator\sources\com\ochafik\lang\jnaerator\nativesupport\dllexport.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class IMAGE_FILE_HEADER extends com.ochafik.lang.jnaerator.runtime.Structure<IMAGE_FILE_HEADER, IMAGE_FILE_HEADER.ByValue, IMAGE_FILE_HEADER.ByReference> {
	public short Machine;
	public short NumberOfSections;
	public int TimeDateStamp;
	public int PointerToSymbolTable;
	public int NumberOfSymbols;
	public short SizeOfOptionalHeader;
	public short Characteristics;
	public IMAGE_FILE_HEADER() {
		super();
	}
	public IMAGE_FILE_HEADER(short Machine, short NumberOfSections, int TimeDateStamp, int PointerToSymbolTable, int NumberOfSymbols, short SizeOfOptionalHeader, short Characteristics) {
		super();
		this.Machine = Machine;
		this.NumberOfSections = NumberOfSections;
		this.TimeDateStamp = TimeDateStamp;
		this.PointerToSymbolTable = PointerToSymbolTable;
		this.NumberOfSymbols = NumberOfSymbols;
		this.SizeOfOptionalHeader = SizeOfOptionalHeader;
		this.Characteristics = Characteristics;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected IMAGE_FILE_HEADER newInstance() { return new IMAGE_FILE_HEADER(); }
	public static class ByReference extends IMAGE_FILE_HEADER implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends IMAGE_FILE_HEADER implements com.sun.jna.Structure.ByValue {}
}
