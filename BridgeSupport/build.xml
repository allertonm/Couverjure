<project name="BridgeSupport" basedir="." default="gen_all_bridge_metadata">
    <property name="generated" value="generated"/>
    <property name="bin" value="bin"/>

    <property name="jna" value="../ThirdParty/jna/jnalib"/>
    <property name="core" value="../Core"/>
    <property name="clojure" value="../ThirdParty/clojure-1.1.0"/>
    <property name="clojure-contrib" value="../ThirdParty/clojure-contrib-1.1.0"/>
    <property environment="env"/>

    <target name="build-contrib">
        <ant antfile="${clojure-contrib}/build.xml" inheritall="false"/>
    </target>

    <path id="libs-for-generated">
        <path location="${jna}/build-d64/jna.jar"/>
        <path location="${core}/couverjure.jar"/>
    </path>

    <path id="libs-for-bstool">
        <path location="${clojure}/clojure.jar"/>
        <path location="${clojure-contrib}/clojure-contrib-slim.jar"/>
        <path location="${core}/couverjure.jar"/>
        <path location="${jna}/build-d64/jna.jar"/>
        <path location="src/clojure"/>
    </path>

    <target name="gen_bridge_metadata">
        <exec executable="gen_bridge_metadata">
            <arg value="--64-bit"/>
            <arg value="-f"/>
            <arg value="${framework.name}"/>
            <arg value="-F"/>
            <arg value="final"/>
            <arg value="-o"/>
            <arg value="${generated}/bridgesupport/${framework.name}.bridgesupport"/>
        </exec>
    </target>

    <target name="gen_bridge_metadata_dylib">
        <exec executable="gen_bridge_metadata">
            <arg value="-f"/>
            <arg value="${framework.name}"/>
            <arg value="-F"/>
            <arg value="dylib"/>
            <arg value="-o"/>
            <arg value="${bin}/${framework.name}_BridgeSupport.dylib"/>
        </exec>
    </target>

    <target name="gen_bridge_xml_and_dylib">
        <antcall target="gen_bridge_metadata"/>
        <antcall target="gen_bridge_metadata_dylib"/>
    </target>

    <target name="gen_all_bridge_metadata">
        <antcall target="gen_bridge_xml_and_dylib">
            <param name="framework.name" value="Foundation"/>
        </antcall>
        <antcall target="gen_bridge_xml_and_dylib">
            <param name="framework.name" value="AppKit"/>
        </antcall>
    </target>

    <target name="get_bridgesupport">
        <mkdir dir="${generated}/bridgesupport"/>
        <copy file="/System/Library/Frameworks/${framework.name}.framework/Resources/BridgeSupport/${framework.name}Full.bridgesupport" todir="${generated}/bridgesupport"/>
    </target>

    <target name="get_all_bridgesupport">
        <antcall target="get_bridgesupport">
            <param name="framework.name" value="Foundation"/>
        </antcall>
        <antcall target="get_bridgesupport">
            <param name="framework.name" value="AppKit"/>
        </antcall>
    </target>

    <property name="bstool.outdir" value="${generated}"/>
    <property name="bstool.java_namespace" value="org.couverjure.cocoa"/>
    <property name="bstool.clj_namespace" value="couverjure.cocoa"/>

    <target name="bstool">
        <mkdir dir="${bstool.outdir}/${bstool.name}"/>
        <java classname="clojure.main" classpathref="libs-for-bstool" fork="true">
            <arg value="@/couverjure/tools/bstool.clj"/>
            <arg value="${bstool.name}"/>
            <arg value="${bstool.bsfile}"/>
            <arg value="${bstool.outdir}/${bstool.name}"/>
            <arg value="${bstool.java_namespace}"/>
            <arg value="${bstool.clj_namespace}"/>
        </java>
    </target>

    <target name="bstool-all" depends="clean,setupdirs,get_all_bridgesupport">
        <antcall  target="bstool">
            <param name="bstool.name" value="Foundation"/>
            <param name="bstool.bsfile" value="${generated}/bridgesupport/FoundationFull.bridgesupport"/>
        </antcall>
    </target>

    <target name="compile-generated">
        <mkdir dir="${bin}/${generated.framework}"/>
        <javac srcdir="${generated}/${generated.framework}/java" destdir="${bin}/${generated.framework}" classpathref="libs-for-generated" debug="true">
        	<include name="**/*.java"/>
        </javac>
    </target>

    <target name="package-framework">
        <jar jarfile="${bin}/${generated.framework}.jar" >
             <fileset dir="${bin}/${generated.framework}" />
             <fileset dir="${generated}/${generated.framework}/clojure"/>
         </jar>
    </target>

    <target name="compile-all-generated" depends="bstool-all">
        <antcall target="compile-generated">
            <param name="generated.framework" value="Foundation"/>
        </antcall>
    </target>

    <target name="package-all-generated" depends="compile-all-generated">
        <antcall  target="package-framework">
            <param name="generated.framework" value="Foundation"/>
        </antcall>
    </target>

    <target name="setupdirs">
        <mkdir dir="${bin}"/>
        <mkdir dir="${generated}"/>
    </target>
    
    <target name="clean">
        <delete dir="${bin}"/>
        <delete dir="${generated}"/>
    </target>
</project>